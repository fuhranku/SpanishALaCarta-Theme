{"version":3,"file":"main.css","mappings":"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","sources":["webpack://SpanishALaCarte/./assets/src/sass/utils/_global.scss","webpack://SpanishALaCarte/./node_modules/include-media/dist/_include-media.scss","webpack://SpanishALaCarte/./assets/src/sass/utils/_colors.scss","webpack://SpanishALaCarte/./assets/src/sass/components/_product-category.scss","webpack://SpanishALaCarte/./assets/src/sass/theme/_theme.scss","webpack://SpanishALaCarte/./assets/src/sass/utils/_variables.scss","webpack://SpanishALaCarte/./assets/src/sass/layout/_footer.scss","webpack://SpanishALaCarte/./assets/src/sass/layout/_header.scss","webpack://SpanishALaCarte/./assets/src/sass/layout/_common-banner.scss"],"sourcesContent":[".wpadminbar-exists {\n  top: 0 !important;\n}\n\n@include media(\">=mobile-l\") {\n  .wpadminbar-exists {\n    top: 50px !important;\n  }\n}\n\n.blur-up {\n  -webkit-filter: blur(5px);\n  filter: blur(5px);\n  transition: filter 400ms, -webkit-filter 400ms;\n}\n\n.blur-up.lazyloaded {\n  -webkit-filter: blur(0);\n  filter: blur(0);\n}\n\n.object-fit-cover {\n  object-fit: cover;\n}\n\n.w-fit-content {\n  width: fit-content;\n}\n\n.text-blue {\n  color: $secondary;\n}\n\n.text-red {\n  color: $primary;\n}\n\n.bg-primary {\n  background-color: $primary !important;\n}\n\n.bg-white {\n  background-color: #fff;\n}\n\n.bg-yellow {\n  background-color: $yellow;\n}\n\n.bg-dark-blue {\n  background-color: #041a40;\n}\n\n.bg-blue {\n  background-color: $secondary;\n}\n\n.bg-theme-gradient {\n  background: linear-gradient(91.5deg, #3d70b1 11.77%, #ff2243 136.6%);\n}\n\n.bg-gray {\n  background-color: $white;\n}\n\n.shadow-red {\n  box-shadow: 10px 17px $primary;\n}\n\n.h-separator {\n  height: 1px;\n}\n\n.vertical-separator {\n  top: 50%;\n  width: 1px;\n  background: #1a2430;\n  transform: translate(-50%, -50%);\n  &.right {\n    left: 100%;\n  }\n}\n\n.text-line-through {\n  text-decoration: line-through;\n  text-decoration-color: rgba(255, 34, 67, 1);\n}\n\n.text-disabled {\n  color: rgba($secondary, 0.3);\n}\n\n.text-blue {\n  color: $secondary !important;\n}\n\n.title-separator {\n  flex-grow: 100;\n  height: 1px;\n  background-color: $primary;\n}\n\n.theme-list {\n  list-style-type: none;\n}\n\n.z-n1 {\n  z-index: -1;\n}\n.z-n2 {\n  z-index: -2;\n}\n\n.z-0 {\n  z-index: 0;\n}\n\n.z-1 {\n  z-index: 1;\n}\n\n.social-link {\n  display: flex;\n  width: 42px;\n  height: 42px;\n  background: #3d70b1;\n  color: $white;\n  font-size: 23px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  border: 2px solid #3d70b1;\n  transition: 0.4s all ease-in-out;\n  &:hover,\n  &:active {\n    background-color: transparent;\n    color: #3d70b1 !important;\n  }\n}\n\n.step {\n  .ays-abs-fs {\n    width: 80%;\n    margin: 0 auto;\n  }\n}\n\n.product-price {\n  background: rgba(6, 100, 255, 0.15);\n}\n\n.btn-add-to-cart {\n  background: transparent;\n  border: 2px solid $secondary;\n  color: $secondary !important;\n  transition: all 0.4s ease-in-out;\n  text-transform: capitalize;\n  &:hover,\n  &:active {\n    background: $primary;\n    border-color: $primary;\n    color: $white !important;\n  }\n}\n","//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v2.0.0\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n@charset \"UTF-8\";\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:list';\n@use 'sass:string';\n@use 'sass:meta';\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x':\n    '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x':\n    '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)',\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if meta.feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {\n  }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map.get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {\n    }\n  }\n\n  @each $condition in $conditions {\n    @if not map.has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n        ($prefix == 'min' and $value > $no-media-breakpoint-value)\n      {\n        @return false;\n      }\n    } @else if not list.index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if string.index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $parsed-dimension: string.slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if string.length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(list.index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: string.index($expression, $operator);\n  $value: string.slice($expression, $operator-index + string.length($operator));\n\n  @if map.has-key($breakpoints, $value) {\n    $value: map.get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map.get($unit-intervals, math.unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{math.unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map.has-key($media-expressions, $expression) {\n    @return map.get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: list.length($list)) {\n  @if list.length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: list.append($result, list.nth($list, $i), comma);\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n\n@function to-number($value) {\n  @if meta.type-of($value) == 'number' {\n    @return $value;\n  } @else if meta.type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: string.slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: (\n    '0': 0,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n  );\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: string.slice($value, 2);\n  }\n\n  @for $i from 1 through string.length($value) {\n    $character: string.slice($value, $i, $i);\n\n    @if not(list.index(map.keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), string.slice($value, $i));\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map.get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + math.div(map.get($numbers, $character), $digits);\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: (\n    'px': 1px,\n    'cm': 1cm,\n    'mm': 1mm,\n    '%': 1%,\n    'ch': 1ch,\n    'pc': 1pc,\n    'in': 1in,\n    'em': 1em,\n    'rem': 1rem,\n    'pt': 1pt,\n    'ex': 1ex,\n    'vw': 1vw,\n    'vh': 1vh,\n    'vmin': 1vmin,\n    'vmax': 1vmax,\n  );\n\n  @if not list.index(map.keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map.get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map.merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map.merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and list.length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n  {\n    @content;\n  } @else if ($im-media-support and list.length($conditions) > 0) {\n    @media #{string.unquote(parse-expression(list.nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","$white: #f6f6f6;\n$gray: #d0d4d8;\n$light-gray: #c4c4c4;\n$black: #000;\n$dark: #020202;\n$yellow: #FFD45A;\n$brown: #B47841;\n$red: #FF3E3E;\n$primary-color: #f1f1f1;\n\n$primary:       #FF2243;\n$secondary:     #041F4C;\n// $success:       $green !default;\n// $info:          $cyan !default;\n// $warning:       $yellow !default;\n// $danger:        $red !default;\n// $light:         $gray-100 !default;\n// $dark:          $gray-800 !default;\n\n\n",".product-category {\n  text-decoration: none;\n  transition: 0.4s all ease-in-out;\n  &:not(:last-child) {\n    margin-right: 0.8rem;\n  }\n  &:nth-child(2n) {\n    background: rgba(6, 100, 255, 0.15);\n    color: rgba(4, 31, 76, 1);\n    &:hover {\n      color: rgba(4, 31, 76, 1) !important;\n      background: rgba(6, 100, 255, 0.4);\n    }\n  }\n  &:nth-child(2n + 1) {\n    background: rgba(255, 34, 67, 0.2);\n    color: rgba(255, 34, 67, 1);\n    &:hover {\n      color: rgba(255, 34, 67, 1) !important;\n      background: rgba(255, 34, 67, 0.4);\n    }\n  }\n}\n\n","@import \"../components/product-category\";\n\nbody {\n  color: $secondary;\n  line-height: normal;\n  margin: 0;\n  font-family: $body-font;\n  position: relative;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\n.h1,\n.h2,\n.h3,\n.h4,\n.h5,\n.h6 {\n  font-family: $headings-font !important;\n  line-height: normal;\n}\n\na {\n  transition: 0.4s all ease-in-out;\n\n  &:hover {\n    color: $primary !important;\n  }\n}\n\n#site-preloader {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(91.5deg, #3d70b1 11.77%, #ff2243 136.6%);\n  z-index: 999999;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  &.page-loaded {\n    animation: fadeOut 0.8s forwards;\n  }\n}\n\n.btn-cart-dropdown {\n  background: transparent;\n  border: 2px solid $secondary;\n  color: $secondary !important;\n  transition: all 0.4s ease-in-out;\n  text-transform: capitalize;\n\n  &:hover,\n  &:active {\n    background: $primary !important;\n    border-color: $primary;\n    color: $white !important;\n  }\n}\n\n.btn-secondary {\n  border-radius: 60px;\n  background-color: $secondary;\n  border-color: $secondary;\n  padding: .5rem 2rem;\n  transition: .4s all ease-in-out;\n\n  &:hover {\n    border-color: $secondary;\n    background-color: transparent;\n    color: $secondary !important;\n  }\n}\n\n.dropdown-toggle {\n  &::after {\n    content: \"\";\n    display: none;\n  }\n\n  .arrow-down {\n    margin-left: 0.255em;\n    transform: rotate(0);\n    transform-origin: 0.3rem 40%;\n    transition: 0.25s transform ease;\n  }\n\n  &.show {\n    .arrow-down {\n      transform: rotate(180deg);\n    }\n  }\n}\n\n.dropdown-item {\n  color: $secondary !important;\n  font-weight: normal;\n  transition: 0.4s all ease-in-out;\n\n  &:hover {\n    color: $secondary !important;\n    font-weight: bold;\n  }\n}\n\n.form-input {\n  border: none;\n  border-bottom: 2px solid #c4c4c4;\n  color: $secondary;\n  padding: 0.6rem;\n\n  &:focus-visible {\n    outline: transparent;\n  }\n}\n\n.form-textarea {\n  border: 2px solid #c4c4c4;\n  color: $secondary;\n  padding: 0.6rem;\n  resize: none;\n\n  &:focus-visible {\n    outline: transparent;\n  }\n}\n\nform.theme-form {\n  display: flex;\n  align-items: center;\n\n  input[type=\"text\"],\n  input[type=\"email\"] {\n    border-top-left-radius: 60px;\n    border-bottom-left-radius: 60px;\n    height: 40px;\n    padding: 0.5rem 0.9rem;\n    border: 2px solid #d8d9d8;\n    flex-grow: 100;\n\n    &:focus-visible {\n      outline: none;\n    }\n\n    &::placeholder {\n      color: #1a24304b;\n    }\n  }\n\n  button[type=\"submit\"] {\n    border-radius: 60px;\n    color: $white;\n    background: $primary;\n    border: none;\n    padding: 0.5rem 0.9rem;\n    margin-left: -17px;\n  }\n}\n\n.header-menu-cart {\n  .cart-dropdown {\n    cursor: pointer;\n  }\n\n  .cart-items-counter {\n    background-color: $primary;\n    color: #fff;\n    right: -10%;\n    top: -3%;\n    width: 21px;\n    height: 21px;\n  }\n\n  .cart-dropdown-menu {\n    width: 400px;\n    left: 50%;\n    bottom: 0%;\n    transform: translate(-90%, 98%);\n\n    .dropdown-cart-list {\n      .dropdown-cart-item {\n        &:not(:last-child) {\n          margin-bottom: 1rem;\n        }\n      }\n    }\n  }\n}\n\n.page-404 {\n  font-size: 6rem;\n  margin-bottom: 0;\n  &.not-found {\n    font-size: 3rem;\n  }\n}\n\n@include media(\"<laptop-l\") {\n  #site-preloader .site-logo {\n    width: 50vw;\n    max-width: 300px;\n    height: auto;\n  }\n\n  .section-shape {\n    object-fit: cover;\n  }\n}\n\n@include media(\"<=mobile-l\") {\n  form.theme-form {\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: 0 auto;\n    gap: 1rem;\n\n    input[type=\"text\"],\n    input[type=\"email\"] {\n      border-radius: 60px;\n    }\n  }\n}\n\n/*This is a fade out. */\n@keyframes fadeOut {\n  0% {\n    opacity: 1;\n  }\n\n  1% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n}","$headings-font: 'Montserrat';\n$body-font: 'Poppins';","#footer-newsletter-form{\n    border-bottom: 2px solid $white;\n    display: flex;\n    input{\n        border: none;\n        background-color: transparent;\n        color: $gray;\n        padding: .6rem 0;\n        &::placeholder{\n            color: $gray;\n        }\n        &:focus-visible{\n            outline: none;\n        }\n        width: -webkit-fill-available;\n    }\n    .btn-newsletter-submit{\n        background-color: transparent;\n        border: none;\n        border-radius: 0;\n        color: $white;\n        font-size: 1.3rem;\n    }\n}\n\n.footer-list{\n    border-radius: 0;\n    .list-group-item{\n        background: transparent;\n        color: $white;\n        display: flex;\n        align-items: center;\n        .footer-icon{\n            font-size: 1.5rem;\n        }\n        a{\n            color: $primary;\n        }\n        &:not(:last-child){\n            border-bottom: 1px solid rgba($white, .6);\n        }\n        &:first-child{\n            border-top: 1px solid rgba($white, .6);\n        }\n    }\n}\n\n#footer-posts-list{\n    li{\n        transition: .4s all ease-in-out;\n        &:hover{\n            background: rgb(126 140 164 / 63%);\n        }\n        a{\n            &:hover{\n                color: $white !important;\n            }\n            color: $white;\n            text-decoration: none;\n            p{\n                margin: 0;\n            }\n        }\n    } \n}",".header-menu{\n    font-weight: 400;\n    .navbar-nav{\n        .nav-item .nav-link{\n            color: $white;\n            transition: .4s all ease-in-out;\n            &:hover,&:active{\n                color: $primary;\n            }\n            &.active{\n                font-weight: bold;\n                text-decoration: underline;\n                text-decoration-thickness: 3px;\n                text-underline-offset: 10px;\n            }\n        }\n    }\n}\n\n#mainHeader.fixed-top{\n    animation: smoothScroll 1s forwards;\n}\n\n@keyframes smoothScroll {\n\t0% {\n\t\ttransform: translateY(-40px);\n\t}\n\t100% {\n\t\ttransform: translateY(0px);\n\t}\n}\n\n#mainNavbar{\n    top: 0%;\n    left: 0%;\n    z-index: 1;\n}\n\n.header-navbar-toggler{\n    height: fit-content;\n    padding: .7rem 0.7rem;\n    align-self: center;\n    background: white;\n    border: 2px solid white;\n}\n\n.common-nav{\n    background: $white;\n    div.container-lg .menu-container #headerNavbar .header-menu a{\n        color: $secondary;\n    }\n}\n\n@include media(\"<laptop\"){\n    #headerNavbar.show{\n        background: $secondary;\n    }\n    .menu-container{\n        background: $secondary;\n    }\n    #headerNavbar{\n        padding: 1.5rem;\n        .header-menu{\n            .navbar-nav{\n                gap: .7rem;\n            }\n        }\n    }\n    .common-nav{\n        div.container-lg .menu-container #headerNavbar .header-menu a{\n            color: $white;\n        }\n    }\n}\n\n@include media(\"<=mobile-l\"){\n    .navbar-brand img{\n        width: 88%;\n        height: auto;\n    }\n}",".common-banner{\n    min-height: 300px;\n    background: linear-gradient(91.5deg, #3D70B1 11.77%, #FF2243 136.6%);\n    padding-top: 93px;\n    .banner-img{\n        object-fit: cover;\n        top: 0%;\n        left: 0%;\n        opacity: .3;\n    }\n    .wave-shape{\n        top: 0%;\n        right: 0%;\n        height: 100%;\n        object-fit: cover;\n    }\n}"],"names":[],"sourceRoot":""}